ad <- read_h5ad(paste0(path, "multi_cycles_200_rand", rand, ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca, UMAP = X_umap)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 8
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
# write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(pt, file = paste0("slingshot/simulated/multi_cycle/multi_cycle_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
'''
rm(list = ls())
gc()
library(anndata)
library(SingleCellExperiment)
library(mclust, quietly = TRUE)
library(RColorBrewer)
library(slingshot)
library(umap)
setwd("/Users/ziqizhang/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests/")
path <- "./additional_data/dyngen_tree/"
rand <- 1
ad <- read_h5ad(paste0(path, "binary_tree", rand, ".h5ad"))
X_pca <- ad$obsm$X_pca
ad
rm(list = ls())
gc()
library(anndata)
library(SingleCellExperiment)
library(mclust, quietly = TRUE)
library(RColorBrewer)
library(slingshot)
library(umap)
setwd("/Users/ziqizhang/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests/")
path <- "./additional_data/dyngen_tree/"
rand <- 1
ad <- read_h5ad(paste0(path, "binary_tree", rand, ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 6
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
# write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(pt, file = paste0("slingshot/simulated/dyngen_tree/dyngen_tree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
rm(list = ls())
gc()
library(anndata)
library(SingleCellExperiment)
library(mclust, quietly = TRUE)
library(RColorBrewer)
library(slingshot)
library(umap)
setwd("/Users/ziqizhang/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests/")
path <- "./additional_data/dyngen_tree/"
rand <- 2
ad <- read_h5ad(paste0(path, "binary_tree", rand, ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 6
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
# write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(pt, file = paste0("slingshot/simulated/dyngen_tree/dyngen_tree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
rm(list = ls())
gc()
library(anndata)
library(SingleCellExperiment)
library(mclust, quietly = TRUE)
library(RColorBrewer)
library(slingshot)
library(umap)
setwd("/Users/ziqizhang/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests/")
path <- "./additional_data/dyngen_tree/"
rand <- 3
ad <- read_h5ad(paste0(path, "binary_tree", rand, ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 6
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
# write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(pt, file = paste0("slingshot/simulated/dyngen_tree/dyngen_tree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
path <- "../CellPath/sim_data/Symsim/"
rand <- 5
ad <- read_h5ad(paste0(path, "multi_cycles_200_rand", rand, ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca, UMAP = X_umap)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 8
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
# write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(pt, file = paste0("slingshot/simulated/multi_cycle/multi_cycle_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
rm(list = ls())
gc()
library(anndata)
library(SingleCellExperiment)
library(mclust, quietly = TRUE)
library(RColorBrewer)
library(slingshot)
library(umap)
setwd("/Users/ziqizhang/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests/")
path <- "./additional_data/dyngen_tree/"
rand <- 3
ad <- read_h5ad(paste0(path, "binary_tree", rand, ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 6
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
# write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(pt, file = paste0("slingshot/simulated/dyngen_tree/dyngen_tree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
rm(list = ls())
gc()
library(anndata)
library(SingleCellExperiment)
library(mclust, quietly = TRUE)
library(RColorBrewer)
library(slingshot)
library(umap)
setwd("/Users/ziqizhang/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests/")
path <- "./additional_data/dyngen_tree/"
rand <- 4
ad <- read_h5ad(paste0(path, "binary_tree", rand, ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 6
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
# write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(pt, file = paste0("slingshot/simulated/dyngen_tree/dyngen_tree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
rm(list = ls())
gc()
setwd("~/Dropbox/Research/Projects/CFRM/CFRM")
# library(rliger)
library(liger)
library(Matrix)
library(patchwork)
# Read in the data: 2 batches, 3 clusters
dir <- './data/simulated/'
paths <- c('2b3c_sigma0.1_b1_1/', '2b3c_sigma0.1_b1_2/', '2b3c_sigma0.2_b1_1/', '2b3c_sigma0.2_b1_2/', '2b3c_sigma0.3_b1_1/', '2b3c_sigma0.3_b1_2/')
quant = F
path <- paths[1]
print(substr(path, 1, nchar(path)-1))
num_clust <- strtoi(substr(path, 3,3))
# data frame
counts_rna1 <- read.table(file = paste0(dir, path, "GxC1.txt"), header = F, sep = "\t")
row.names(counts_rna1) <- paste("Gene_", 1:dim(counts_rna1)[1], sep = "")
colnames(counts_rna1) <- paste("Cell_", 1:dim(counts_rna1)[2], sep = "")
counts_rna2 <- read.table(file = paste0(dir, path, "GxC2.txt"), header = F, sep = "\t")
row.names(counts_rna2) <- paste("Gene_", 1:dim(counts_rna2)[1], sep = "")
colnames(counts_rna2) <- paste("Cell_", (dim(counts_rna1)[2]+1):(dim(counts_rna1)[2] + dim(counts_rna2)[2]), sep = "")
counts_atac1 <- read.table(file = paste0(dir, path, "RxC1.txt"), header = F, sep = "\t")
rownames(counts_atac1) <- paste("Loc_", 1:dim(counts_atac1)[1], sep = "")
colnames(counts_atac1) <- paste("Cell_", 1:dim(counts_atac1)[2], sep = "")
counts_atac2 <- read.table(file = paste0(dir, path, "RxC2.txt"), header = F, sep = "\t")
rownames(counts_atac2) <- paste("Loc_", 1:dim(counts_atac2)[1], sep = "")
colnames(counts_atac2) <- paste("Cell_", (dim(counts_atac1)[2]+1):(dim(counts_atac1)[2] + dim(counts_atac2)[2]), sep = "")
gene_act <- read.table(file = paste0(dir, path, "region2gene.txt"), header = F, sep = "\t")
rownames(gene_act) <- rownames(counts_atac1)
colnames(gene_act) <- rownames(counts_rna1)
label_b1 <- read.csv(file = paste0(dir, path, "cell_label1.txt"), header = F, sep = "\t")
label_b2 <- read.csv(file = paste0(dir, path, "cell_label2.txt"), header = F, sep = "\t")
rm(list = ls())
gc()
setwd("~/Dropbox/Research/Projects/CFRM/CFRM")
# library(rliger)
library(liger)
library(Matrix)
library(patchwork)
# Read in the data: 2 batches, 3 clusters
dir <- '../data/simulated/'
paths <- c('2b3c_sigma0.1_b1_1/', '2b3c_sigma0.1_b1_2/', '2b3c_sigma0.2_b1_1/', '2b3c_sigma0.2_b1_2/', '2b3c_sigma0.3_b1_1/', '2b3c_sigma0.3_b1_2/')
quant = F
path <- paths[1]
print(substr(path, 1, nchar(path)-1))
num_clust <- strtoi(substr(path, 3,3))
# data frame
counts_rna1 <- read.table(file = paste0(dir, path, "GxC1.txt"), header = F, sep = "\t")
row.names(counts_rna1) <- paste("Gene_", 1:dim(counts_rna1)[1], sep = "")
colnames(counts_rna1) <- paste("Cell_", 1:dim(counts_rna1)[2], sep = "")
counts_rna2 <- read.table(file = paste0(dir, path, "GxC2.txt"), header = F, sep = "\t")
row.names(counts_rna2) <- paste("Gene_", 1:dim(counts_rna2)[1], sep = "")
colnames(counts_rna2) <- paste("Cell_", (dim(counts_rna1)[2]+1):(dim(counts_rna1)[2] + dim(counts_rna2)[2]), sep = "")
counts_atac1 <- read.table(file = paste0(dir, path, "RxC1.txt"), header = F, sep = "\t")
rownames(counts_atac1) <- paste("Loc_", 1:dim(counts_atac1)[1], sep = "")
colnames(counts_atac1) <- paste("Cell_", 1:dim(counts_atac1)[2], sep = "")
counts_atac2 <- read.table(file = paste0(dir, path, "RxC2.txt"), header = F, sep = "\t")
rownames(counts_atac2) <- paste("Loc_", 1:dim(counts_atac2)[1], sep = "")
colnames(counts_atac2) <- paste("Cell_", (dim(counts_atac1)[2]+1):(dim(counts_atac1)[2] + dim(counts_atac2)[2]), sep = "")
gene_act <- read.table(file = paste0(dir, path, "region2gene.txt"), header = F, sep = "\t")
rownames(gene_act) <- rownames(counts_atac1)
colnames(gene_act) <- rownames(counts_rna1)
label_b1 <- read.csv(file = paste0(dir, path, "cell_label1.txt"), header = F, sep = "\t")
label_b2 <- read.csv(file = paste0(dir, path, "cell_label2.txt"), header = F, sep = "\t")
rm(list = ls())
gc()
setwd("~/Dropbox/Research/Projects/CFRM/CFRM")
# library(rliger)
library(liger)
library(Matrix)
library(patchwork)
# Read in the data: 2 batches, 3 clusters
dir <- './data/simulated/'
paths <- c('2b3c_sigma0.1_b1_1/', '2b3c_sigma0.1_b1_2/', '2b3c_sigma0.2_b1_1/', '2b3c_sigma0.2_b1_2/', '2b3c_sigma0.3_b1_1/', '2b3c_sigma0.3_b1_2/')
quant = F
getwd()
rm(list = ls())
gc()
library(tidyverse)
library(dyngen)
library(anndata)
library(dyno)
setwd("~/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests")
set.seed(7)
backbone <- backbone_binary_tree(
num_modifications = 2
)
init <- initialise_model(
backbone = backbone,
num_cells = 3000,
num_tfs = 100,
num_targets = 0,
num_hks = 0,
simulation_params = simulation_default(census_interval = 10, ssa_algorithm = ssa_etl(tau = 300 / 3600)),
verbose = FALSE
)
out <- generate_dataset(init, make_plots = TRUE)
dataset <- out$dataset
model <- out$model
plot_gold_mappings(model, do_facet = FALSE) + scale_colour_brewer(palette = "Dark2")
# dataset <- as_dyno(model)
# plot_dimred(dataset)
ad <- as_anndata(model)
# ad$write_h5ad("./additional_data/dyngen_tree/binary_tree3.h5ad")
rm(list = ls())
gc()
library(tidyverse)
library(dyngen)
library(anndata)
library(dyno)
setwd("~/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests")
set.seed(7)
backbone <- backbone_binary_tree(
num_modifications = 2
)
init <- initialise_model(
backbone = backbone,
num_cells = 3000,
num_tfs = 100,
num_targets = 0,
num_hks = 0,
simulation_params = simulation_default(census_interval = 10, ssa_algorithm = ssa_etl(tau = 300 / 3600)),
verbose = FALSE
)
out <- generate_dataset(init, make_plots = TRUE)
dataset <- out$dataset
model <- out$model
plot_gold_mappings(model, do_facet = FALSE) + scale_colour_brewer(palette = "Dark2")
dataset <- as_dyno(model)
plot_dimred(dataset)
ad <- as_anndata(model)
# ad$write_h5ad("./additional_data/dyngen_tree/binary_tree3.h5ad")
rm(list = ls())
gc()
library(anndata)
library(SingleCellExperiment)
library(mclust, quietly = TRUE)
library(RColorBrewer)
library(slingshot)
library(umap)
setwd("/Users/ziqizhang/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests/")
# trifurcating
path <- "../CellPath/sim_data/Dyngen/"
datasets <- c("Trifurcating.h5ad")
rand <- 1
ad <- read_h5ad(paste0(path, datasets[rand], ".h5ad"))
path <- "../CellPath/sim_data/Dyngen/"
datasets <- c("Trifurcating")
rand <- 1
ad <- read_h5ad(paste0(path, datasets[rand], ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 7
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
write.table(pt, file = paste0("slingshot/trifur/", datasets[rand], "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
getwd(
)
write.table(pt, file = paste0("slingshot/simulated/trifur/", datasets[rand], "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
rm(list = ls())
gc()
library(anndata)
library(SingleCellExperiment)
library(mclust, quietly = TRUE)
library(RColorBrewer)
library(slingshot)
library(umap)
setwd("/Users/ziqizhang/Dropbox (GaTech)/Research/Projects/CellPath/additional_tests/")
# velosim tree
path <- "./additional_data/velosim_tree/"
datasets <- c("3branches_rand0", "3branches_rand1", "4branches_rand0", "3branches_rand3", "3branches_rand4")
rand <- 5
ad <- read_h5ad(paste0(path, datasets[rand], ".h5ad"))
# trifurcating
path <- "../CellPath/sim_data/Dyngen/"
datasets <- c("Bifurcating")
rand <- 1
ad <- read_h5ad(paste0(path, datasets[rand], ".h5ad"))
X_pca <- ad$obsm$X_pca
X_umap <- ad$obsm$X_umap
# gene by cell
counts <- t(ad$layers["spliced"])
sce <- SingleCellExperiment(assays = List(counts = counts))
reducedDims(sce) <- SimpleList(PCA = X_pca)
# GMM
# cl1 <- Mclust(X_pca)$classification
# colData(sce)$GMM <- cl1
# kmeans
num_clust <- 7
cl2 <- kmeans(X_pca, centers = num_clust)$cluster
colData(sce)$kmeans <- cl2
group <- brewer.pal(num_clust,"Paired")[cl2]
plot(X_pca, col = group, pch=16, asp = 1)
legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
mean_pt <- lapply(seq(num_clust), function(X){
mean(ad$obs$sim_time[cl2 == X])
})
start <- which.min(mean_pt)
sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
ss <- colData(sce)$slingshot
pt <- ss@assays@data@listData$pseudotime
# write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
# write.table(pt, file = paste0("slingshot/simulated/dyngen_tree/dyngen_tree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
# write.table(pt, file = paste0("slingshot/simulated/velosim_tree/", datasets[rand], "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(pt, file = paste0("slingshot/simulated/trifur/", datasets[rand], "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
# path <- "../CellPath/sim_data/Symsim/"
# rand <- 5
# ad <- read_h5ad(paste0(path, "multi_cycles_200_rand", rand, ".h5ad"))
# X_pca <- ad$obsm$X_pca
# X_umap <- ad$obsm$X_umap
# # gene by cell
# counts <- t(ad$layers["spliced"])
#
# sce <- SingleCellExperiment(assays = List(counts = counts))
#
# reducedDims(sce) <- SimpleList(PCA = X_pca, UMAP = X_umap)
#
# # GMM
# # cl1 <- Mclust(X_pca)$classification
# # colData(sce)$GMM <- cl1
# # kmeans
# num_clust <- 8
# cl2 <- kmeans(X_pca, centers = num_clust)$cluster
# colData(sce)$kmeans <- cl2
# group <- brewer.pal(num_clust,"Paired")[cl2]
# plot(X_pca, col = group, pch=16, asp = 1)
# legend("topleft", legend=seq(1,num_clust), pch=16, col=brewer.pal(num_clust,"Paired")[seq(1,num_clust)])
#
# mean_pt <- lapply(seq(num_clust), function(X){
#   mean(ad$obs$sim_time[cl2 == X])
# })
#
# start <- which.min(mean_pt)
#
# sce <- slingshot(sce, clusterLabels = 'kmeans', reducedDim = 'PCA', start.clus = start)
# ss <- colData(sce)$slingshot
# pt <- ss@assays@data@listData$pseudotime
#
# # write.table(pt, file = paste0("slingshot/simulated/cycle_tree/cycletree_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
# write.table(pt, file = paste0("slingshot/simulated/multi_cycle/multi_cycle_rand", rand, "_slingshot.tsv"), sep = "\t", row.names = FALSE, col.names = FALSE)
